# {{{
alias shellrestart='exec $SHELL -l'
alias ssh='TERM=xterm ssh'
alias ssh256='TERM=xterm-256color ssh'
alias a='ls -A' # -A all except literal . ..
alias c='clear'
alias cdd='cd -'  # goto last dir cd'ed from
alias cl='clear; l'
alias la="ls -A -l -G -h"
alias lat="la -t"
alias lf='ls -F'
alias ll='ls -l'
alias ls="ls -FG"
alias vag='vagrant'
alias l.='ls -d .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
alias lh="ls -lh"
alias ll='ls -lhG'  # -l long listing, human readable, no group info
alias lt='ls -lt' # sort with recently modified first
alias md='mkdir -p'
alias k9="killall -9"
alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory
function isreg {
  whois $1 | grep -q 'No match' && echo "No" || echo "Yes"
}
alias ehosts='sudo vim /etc/hosts'
alias newpass='openssl rand -base64 6'
# }}}

# git {{{
alias g='git status'
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gco='git checkout'
alias gd='git diff'
alias gdbl='git diff --stat'
alias gdm='git diff master'
alias gdt='git difftool'
alias gl='git pull'
alias gnp="git-notpushed"
alias gp='git push'
function gg() { 
    git commit -v -m "$*"
}
function glg() {
  git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %f %Cgreen(%cr)%Creset by %Cblue%cn' --abbrev-commit --date=relative
}
function gbt() { 
  git branch --track $2 $1/$2 && git checkout $2 
}
function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\ →\ \1/'
}
function gitrmdeleted() {
	git status | grep "deleted:" | awk '{ print $3 }' | while read f; do git rm "$f"; done
}
# }}}

# homebrew {{{
function brewup {
  brew update && for i in $(brew outdated | awk '{print $1}'); do brew upgrade $i; done && brew cleanup
}
# }}}

# redmine {{{
# $ revsbyrefs ticket-number  -> このチケットに紐づくリビジョン一覧
# $ filesbyrefs ticket-number -> このチケットで変更されたファイル一覧
function revsbyrefs() {
  refs=$1
  svn log -l 1000 | sed '/^$/d' | grep -B1 -o "refs #$refs" | grep -E -o '^r(\d+)' | tr -d 'r' | sort | tr '\n' ' ' | sed 's/[[:space:]]*$//' 
}
function filesbyrefs() {
  files=()
  for i in $(revsbyrefs $1); do
    while read f; do
      files+=("$f\n")
    done < <(svn diff -c $i --summarize)
  done
  echo $files | awk '{print $NF}' | sort | uniq
}
# }}}

if [ -f ~/.alias.local ]
then
  . ~/.alias.local
fi
