# Command Enhancements

# Utility
alias reload='source ~/dotfiles/aliases'

alias vim='vim -N'
alias ls="ls -FG"
alias a='ls -A' # -A all except literal . ..
alias la="ls -A -l -G -h"
alias lat="la -t"
alias c='clear'
alias cdd='cd -'  # goto last dir cd'ed from
alias cl='clear; l'
alias lf='ls -F'
alias ll='ls -l'
alias search=grep
alias mcd='mount /mnt/cdrom'
alias ucd='umount /mnt/cdrom'
alias mc='mc -c'
alias ..='cd ..'
alias ...='cd ../..'
alias nt='newtab' # new terminal tab

function cdc() {
  cd $1; ls
}

alias cls='clear; ls'
alias h='history'
alias l.='ls -d .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
                    # -G color
alias lh="ls -lh"
alias ll='ls -lhG'  # -l long listing, human readable, no group info
alias lt='ls -lt' # sort with recently modified first
alias md='mkdir -p'
alias s='cd ..'   # up one dir
alias e='exit'
alias k9="killall -9"

function take() {
  mkdir -p "$1"
  cd "$1"
}

function killnamed () {
  ps ax | grep $1 | cut -d ' ' -f 2 | xargs kill
}

function zipr() {
  zip -r $1.zip $1
}

function pless() {
  pygmentize $1 | less -r
}

# Processes

alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory

# Syntax check Javascript

function jsc() {
  jsl -conf /etc/jsl/jsl.conf -process $1
}

function aiff2mp3() {
  lame -h -V 0 $1.aif $1.mp3
}

function wav2mp3() {
  lame -h -V 0 $1.wav $1.mp3
}

function rmf(){
  for file in $*
  do
    __rm_single_file $file
  done
}

function __rm_single_file(){
  if ! [ -d ~/.Trash/ ]
  then
    command /bin/mkdir ~/.Trash
  fi

  if ! [ $# -eq 1 ]
  then
    echo "__rm_single_file: 1 argument required but $# passed."
    exit
  fi

  if [ -e $1 ]
  then
    BASENAME=`basename $1`
    NAME=$BASENAME
    COUNT=0
    while [ -e ~/.Trash/$NAME ]
    do
      COUNT=$(($COUNT+1))
      NAME="$BASENAME.$COUNT"
    done

    command /bin/mv $1 ~/.Trash/$NAME
  else
    echo "No such file or directory: $file"
  fi
}

# check if domain is registerd
function isreg {
  whois $1 | grep -q 'No match' && echo "No" || echo "Yes"
}

# Tar
function untr() {
  tar xzf $1
}

alias me='whoami'
alias a2restart='sudo /etc/init.d/apache2 restart'
alias ehosts='sudo vim /etc/hosts'
alias newpass='openssl rand -base64 6'

function markdown() { 
  /Applications/TextMate.app/Contents/SharedSupport/Support/bin/Markdown.pl $1 > $1.html 
}

# Git

#alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gdt='git difftool'
alias gdbl='git diff --stat'

# Commit pending changes and quote all args as message
function gg() { 
    git commit -v -m "$*"
}

function glg() {
  git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %f %Cgreen(%cr)%Creset by %Cblue%cn' --abbrev-commit --date=relative
}

alias gco='git checkout'
alias gd='git diff'
alias gdm='git diff master'
alias gl='git pull'
alias gnp="git-notpushed"
alias gp='git push'
alias gst='git status'
alias gt='git status'
alias g='git status'
alias eg='mate .git/config'
alias gha='gh --all'

# Git clone from GitHub
function gch() {
  git clone git://github.com/$USER/$1.git
}

# Setup a tracking branch from [remote] [branch_name]
function gbt() { 
  git branch --track $2 $1/$2 && git checkout $2 
}

# Quickly clobber a file and checkout
function grf() { 
  rm $1
  git checkout $1 
}

# Call from inside an initialized Git repo, with the name of the repo.
function new-git() {
  ssh git@example.com "mkdir $1.git && cd $1.git && git --bare init"
  git remote add origin git@example.com:$1.git
  git push origin master
  git config branch.master.remote origin
  git config branch.master.merge refs/heads/master
  git config push.default current
}

function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\ â†’\ \1/'
}

function gitrmdeleted() {
	git status | grep "deleted:" | awk '{ print $3 }' | while read f; do git rm "$f"; done
}

alias gitbox="open -a Gitbox ."

function oa {
  open -a $1
}

alias o='open .'
alias chrome='open -a Google\ Chrome.app --args -enable-apps'
alias xcode='open /Xcode4/Applications/Xcode.app'

# use yellow for directories
export CLICOLOR=1
export LSCOLORS=dxfxcxdxbxegedabagacad

# Rails
alias mr='mongrel_rails start'
alias ms='mongrel_rails stop'
alias rp='touch tmp/restart.txt'
alias sc='./script/console'
alias sg='./script/generate'
alias sp='./script/plugin'
alias ss='./script/server'
alias tl='tail -f log/*.log'
alias ts='thin start'

# TDD / BDD
alias aa='autotest'
alias aaf='autotest -f' # Don't run all at start
alias aas="./script/autospec" # Various server

# Xcode

# Analyze release build
alias sx="xcodebuild clean && ~/src/checker/scan-build -k -V xcodebuild"

# Analyze test build
alias sxt="xcodebuild -target Test clean && ~/src/checker/scan-build -k -V xcodebuild -target Test"

# Call with -target Foo
function sxx() { 
  xcodebuild $* clean && ~/src/checker/scan-build -k -V xcodebuild $* 
}

alias ox="open *.xcodeproj"

# Nginx
function nginx_stop() {
  ps ax | grep nginx | cut -d " " -f 1 | xargs sudo kill -9
}

function nginx_start() {
  sudo /usr/local/sbin/nginx
}

# Run virtual machine headless
function vmng() {
  vmrun start ~/Documents/Virtual\ Machines/$1.vmwarevm nogui
}

function vm() {
  vmrun start ~/Documents/Virtual\ Machines/$1.vmwarevm
}

# ksdiff
alias skdiff='svn diff --diff-cmd=ksdiff-svnwrapper .'
